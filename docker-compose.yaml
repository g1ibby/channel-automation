version: '3.8'

services:

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.16.3"
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=true"
      - "xpack.security.transport.ssl.enabled=true"
      - "xpack.security.transport.ssl.verification_mode=certificate"
      - "xpack.security.transport.ssl.keystore.type=PKCS12"
      - "xpack.security.transport.ssl.truststore.type=PKCS12"
      - "ELASTIC_PASSWORD=elastic"
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=http://localhost:8080"
      - "http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      - "http.cors.allow-methods=OPTIONS,HEAD,GET,POST,PUT,DELETE"
      - "http.cors.allow-credentials=true"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  db:
    image: "postgres:15.2-alpine"
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: automation
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M

  channel-automation:
    image: "${image_name}"
    restart: always
    environment:
      APP_TELEGRAM_BOT_TOKEN: "${APP_TELEGRAM_BOT_TOKEN}"
      APP_ASSISTANT_TOKEN: "${APP_ASSISTANT_TOKEN}"
      APP_DATABASE_URL: "postgresql://user:password@db/automation"
      APP_ES_HOST: "elasticsearch"
      APP_ES_PORT: 9200
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M

  channel-automation-crawler:
    image: "${image_name}"
    restart: always
    environment:
      APP_TELEGRAM_BOT_TOKEN: "${APP_TELEGRAM_BOT_TOKEN}"
      APP_ASSISTANT_TOKEN: "${APP_ASSISTANT_TOKEN}"
      APP_DATABASE_URL: "postgresql://user:password@db/automation"
      APP_ES_HOST: "elasticsearch"
      APP_ES_PORT: 9200
    command: ["python", "-u", "channel_automation/__main__.py", "crawler"]
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M

  datadog:
    container_name: datadog_agent
    image: datadog/agent:latest
    environment:
      DD_API_KEY: "3f02877831d50ff530810930faeb79ae"
      DD_SITE: "datadoghq.com" # Change to datadoghq.eu if you are in the EU
      DD_LOGS_ENABLED: "true"
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: "true"
      DD_CONTAINER_EXCLUDE: "name:datadog_agent"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    ports:
      - "8126:8126/tcp"

volumes:
  db-data:
  esdata:
