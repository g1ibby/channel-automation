version: '3.8'

services:

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.16.3"
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=true"
      - "xpack.security.transport.ssl.enabled=true"
      - "xpack.security.transport.ssl.verification_mode=certificate"
      - "xpack.security.transport.ssl.keystore.type=PKCS12"
      - "xpack.security.transport.ssl.truststore.type=PKCS12"
      - "ELASTIC_PASSWORD=elastic"
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=http://localhost:8080"
      - "http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      - "http.cors.allow-methods=OPTIONS,HEAD,GET,POST,PUT,DELETE"
      - "http.cors.allow-credentials=true"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - esnet

  db:
    image: "postgres:15.2-alpine"
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: automation
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  channel-automation:
    image: "ghcr.io/g1ibby/channel-automation:latest"

volumes:
  db-data:
  esdata:

networks:
  esnet:
